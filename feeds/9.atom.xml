<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Bugra Akyildiz</title><link href="http://bugra.github.io/" rel="alternate"></link><link href="http://bugra.github.io/feeds/9.atom.xml" rel="self"></link><id>http://bugra.github.io/</id><updated>2014-02-09T00:00:00+00:00</updated><entry><title>Pig Not So Foreign Language Paper Notes</title><link href="http://bugra.github.io/work/notes/2014-02-09/pig-not-so-foreign-language-paper-notes/" rel="alternate"></link><updated>2014-02-09T00:00:00+00:00</updated><author><name>Bugra Akyildiz</name></author><id>tag:bugra.github.io,2014-02-09:work/notes/2014-02-09/pig-not-so-foreign-language-paper-notes/</id><summary type="html">&lt;p&gt;These are notes that I took from the &lt;a href="http://infolab.stanford.edu/~usriv/papers/pig-latin.pdf"&gt;paper&lt;/a&gt;, where the authors
explain the design principles and some theoretical aspects of Pig the
programming language. I gave a basic overview in &lt;a href="/work/notes/2014-02-08/pig-advantages-and-disadvantages/"&gt;Pig Advantages and
Disadvantages&lt;/a&gt;. &lt;/p&gt;
&lt;h2&gt;Before Pig&lt;/h2&gt;
&lt;p&gt;Before Pig and Hadoop, there was mighty Map-Reduce paradigm for
parallellization and data processin. The overview of data
processing before Pig as follows:&lt;/p&gt;
&lt;h3&gt;Map-Reduce Advantages&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Scale&lt;ul&gt;
&lt;li&gt;Scalable due to simpler design&lt;/li&gt;
&lt;li&gt;Only parallelizable operations&lt;/li&gt;
&lt;li&gt;No transactions&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Runs on cheap commodity(cost) hardware&lt;/li&gt;
&lt;li&gt;Procedural control - a processing "pipe"&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Disadvantages&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Extremely rigid data flow(Map-Reduce)&lt;/li&gt;
&lt;li&gt;Common operations must be coded by hand(Join, filter, projection, aggregation)&lt;/li&gt;
&lt;li&gt;Semantics are hidden inside map-reduce functions&lt;ul&gt;
&lt;li&gt;Difficult to maintain, extend and optimize&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;Need a high-level, general data-flow language.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Automatic query optimization is hard.&lt;/li&gt;
&lt;li&gt;Pig Latin does not preclude optimization.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Big demand for parallel data processing.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Emerging tools that do not look like SQL DBMS.&lt;/li&gt;
&lt;li&gt;Programmers like &lt;strong&gt;dataflow pipes&lt;/strong&gt; over static files.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Building a High-Level Dataflow System on Top of MapReduce&lt;/h2&gt;
&lt;h3&gt;What is Pig&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Procedural dataflow language (Pig Latin) for Map-Reduce&lt;/li&gt;
&lt;li&gt;Provides standard relational transforms(group, join, filter, sort)&lt;/li&gt;
&lt;li&gt;Schemas are optional, if used, can be part of data or specified at run time.&lt;/li&gt;
&lt;li&gt;User defined functions are first class of citizens of the language.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Join implementations&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Default is symmetric, hash join&lt;/li&gt;
&lt;li&gt;Fragment-replicate for joining large and small inputs.&lt;/li&gt;
&lt;li&gt;Merge join for joining inputs sorted on join key.&lt;/li&gt;
&lt;li&gt;Skew join for handling inputs with significant skew in the join key.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Hbase&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Solves appending problem in HDFS&lt;ul&gt;
&lt;li&gt;Low-latency query API&lt;/li&gt;
&lt;li&gt;rich, BigTable-style data model based on column families&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Advantages of Pig&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;High Level language&lt;/li&gt;
&lt;li&gt;Transformations on set of records&lt;/li&gt;
&lt;li&gt;Process data one step at a time&lt;/li&gt;
&lt;li&gt;UDF's are first class citizens.&lt;/li&gt;
&lt;li&gt;Easier than SQL.   &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Needs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Innovation at internet companies critically depends on being able to analyze terabytes of data collected every day.&lt;/li&gt;
&lt;li&gt;SQL could be unnatural, and hard to follow as it declarative.&lt;/li&gt;
&lt;li&gt;Map-Reduce paradigm is too low-level and rigid, and leads to a great deal of custom user code that is hard to maintain, and reuse.&lt;/li&gt;
&lt;li&gt;Engineers who develop search engine ranking algoriths spend much of their time analyzing search logs looking for exploitable trends.&lt;/li&gt;
&lt;li&gt;Map-Reduce: its one input and two-stage data flow is extremely rigid. &lt;/li&gt;
&lt;li&gt;Pig-Latin program is a sequence of steps, much of liek in a programming language, each of which carries out a single data transformation.&lt;/li&gt;
&lt;li&gt;The use of such high-level primitives renders low-level manipulations (as required in map-reduce) unnecessary.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;First, &lt;strong&gt;Pig Latin&lt;/strong&gt; is the programming language and &lt;strong&gt;Pig&lt;/strong&gt; is the data processing environment on top of Hadoop.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Pig Latin as a DataFlow Language&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;User specifies a sequence of steps where each step specifies only a single, high-level data transformation.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Nested Data Model&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Programmers often think in terms of nested data structures.&lt;/li&gt;
&lt;li&gt;Databases on the other hand, allows only flat tables, i.e. only atomic fields as columns.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;Why nested model is better?&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;A nested data model is closer to how programmers think, and consequently much more natural to them than normalization.&lt;/li&gt;
&lt;li&gt;Data is often stored on disk in an inherently nested fashion.&lt;/li&gt;
&lt;li&gt;A nested data model also allows us to fulfill our goal of having an algebraic language where each step carries out only a single data transformation.&lt;/li&gt;
&lt;li&gt;A nested data model allows programmers to easily write a rich set of user-defined functions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;UDFs&lt;/h3&gt;
&lt;p&gt;All aspects of processing in Pig Latin can be customized through User Defined Functions.&lt;/p&gt;</summary></entry></feed>